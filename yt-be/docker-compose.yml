version: "4"

services:
  mongo:
    image: mongo:latest
    restart: unless-stopped
    env_file: ./.env
    container_name: mongo
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "0.0.0.0:$MONGODB_DOCKER_PORT:$MONGODB_DOCKER_PORT"
    networks:
      - node-webapp-network
    volumes:
      - type: volume
        source: MONGO_DATA
        target: /data/db
      - type: volume
        source: MONGO_CONFIG
        target: /data/configdb

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    env_file: ./.env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGODB_INIT_ROOT_USER
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGODB__INIT_ROOT_PASSWORD
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: $MONGODB_DOCKER_PORT
    ports:
      - "0.0.0.0:$MONGODB_EXPRESS_OUTPUT_DOCKER_PORT:$MONGODB_EXPRESS_INPUT_DOCKER_PORT"
    networks:
      - node-webapp-network
    depends_on:
      - mongo

  server-dev:
    env_file: ./.env
    restart: always
    depends_on:
      - mongo
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: server-dev
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      DB_HOST: mongo
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_PORT: $DB_PORT
      DB_NAME: $DB_NAME
      JWT_SECRET_KEY: $JWT_SECRET_KEY
      JWT_EXPIRES_IN: $JWT_EXPIRES_IN
      JWT_REFRESH_EXPIRES_IN: $JWT_REFRESH_EXPIRES_IN
      CRYPTO_SECRET: $CRYPTO_SECRET
      SEED_SECRET: $SEED_SECRET
      GOOGLE_USER_INFO_URL: $GOOGLE_USER_INFO_URL
      BASE_URL: $BASE_URL
      PORT: $PORT
      NEXT_PUBLIC_EMAIL_HOST: $NEXT_PUBLIC_EMAIL_HOST
      NEXT_PUBLIC_EMAIL_USER: $NEXT_PUBLIC_EMAIL_USER
      NEXT_PUBLIC_EMAIL_PASS: $NEXT_PUBLIC_EMAIL_PASS
    stdin_open: true
    tty: true
    networks:
      - node-webapp-network

  server-prod:
    env_file: ./.env
    restart: always
    depends_on:
      - mongo
    build:
      target: production
      context: .
      dockerfile: Dockerfile.prod
    container_name: server-prod
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: production
      DB_HOST: mongo
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_PORT: $DB_PORT
      DB_NAME: $DB_NAME
      JWT_SECRET_KEY: $JWT_SECRET_KEY
      JWT_EXPIRES_IN: $JWT_EXPIRES_IN
      JWT_REFRESH_EXPIRES_IN: $JWT_REFRESH_EXPIRES_IN
      CRYPTO_SECRET: $CRYPTO_SECRET
      SEED_SECRET: $SEED_SECRET
      GOOGLE_USER_INFO_URL: $GOOGLE_USER_INFO_URL
      BASE_URL: $BASE_URL
      PORT: $PORT
      NEXT_PUBLIC_EMAIL_HOST: $NEXT_PUBLIC_EMAIL_HOST
      NEXT_PUBLIC_EMAIL_USER: $NEXT_PUBLIC_EMAIL_USER
      NEXT_PUBLIC_EMAIL_PASS: $NEXT_PUBLIC_EMAIL_PASS
    stdin_open: true
    tty: true
    networks:
      - node-webapp-network

networks:
  node-webapp-network:
    driver: bridge

volumes:
  MONGO_DATA:
    name: MONGO_DATA
  MONGO_CONFIG:
    name: MONGO_CONFIG
